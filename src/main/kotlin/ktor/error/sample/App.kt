/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package ktor.error.sample

import io.ktor.application.call
import io.ktor.application.install
import io.ktor.features.ContentNegotiation
import io.ktor.http.HttpStatusCode
import io.ktor.jackson.jackson
import io.ktor.response.respond
import io.ktor.routing.get
import io.ktor.routing.routing
import io.ktor.server.engine.embeddedServer
import io.ktor.server.netty.Netty

data class ResponseContainer(
    val string: String
)

fun main(args: Array<String>) {
    val server = embeddedServer(Netty, port = 8080) {
        install(ContentNegotiation) {
            jackson {  }
        }

        routing {
            get("/small") {
                call.respond(
                    HttpStatusCode.OK,
                    ResponseContainer(string = "small string")
                )
            }

            get("/large") {
                call.respond(
                    HttpStatusCode.OK,
                    ResponseContainer(string = "large string".repeat(10000))
                )
            }
        }
    }
    server.start(wait = true)
}
